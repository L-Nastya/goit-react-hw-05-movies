{"version":3,"file":"static/js/851.25d5aa27.chunk.js","mappings":"2LAeA,IAXkB,SAAC,GAAa,IAAZA,EAAW,EAAXA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACvB,SAACC,EAAD,WACQ,SAACC,EAAD,CAAWC,MAAO,CAACC,KAAMT,GAAWU,GAAE,kBAAaN,GAAnD,SAA0DC,KADlDD,EADO,IAK3B,OAAO,wBAAKF,GACf,EAYD,IAAMI,EAAYK,EAAAA,GAAAA,GAAH,gDAGTJ,GAAYI,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kM,yLCcf,EApCmB,SAAC,GAAgB,IAAfE,EAAc,EAAdA,SACnB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAoBA,OACA,UAACC,EAAD,CAAMJ,SAZa,SAAAK,GACjBA,EAAMC,iBACa,KAAhBJ,EAAKK,QAIRP,EAASE,GACTC,EAAQ,KAJNK,IAAAA,OAAAA,QAAwB,gBAK3B,EAID,WACE,SAACC,EAAD,CACEC,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACC,GACjB,IAAQF,EAAUE,EAAEC,OAAZH,MACRR,EAAQQ,EACT,EAoBGI,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACC,EAAD,CAAYR,KAAK,SAAjB,sBAGC,EAICN,EAAON,EAAAA,GAAAA,KAAH,oHAOJW,EAAYX,EAAAA,GAAAA,MAAH,qFAMToB,EAAapB,EAAAA,GAAAA,OAAH,uL,SCVhB,EAvCe,WAAO,IAAD,EACjB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEIrB,EAAI,UAAGoB,EAAaE,IAAI,iBAApB,QAAiC,GA4BzC,OArBJC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAkBzB,GAFzB,UAER0B,EAFQ,OAGdR,EAAUQ,EAAOC,SACY,IAA1BD,EAAOC,QAAQC,OAJJ,uBAKftB,IAAAA,OAAAA,QAAwB,oBALT,4EAUVuB,QAAQC,IAAI,SAVF,0DAAH,qDAab9B,GACDwB,GAGJ,GAAE,CAACxB,KAII,iCACI,SAAC,EAAD,CAAYF,SA5BE,SAAAE,GAClBqB,EAAgB,CAACU,OAAQ/B,GAC5B,KA2BO,SAACgC,EAAA,EAAD,CAAWhD,MAAOiC,MAG7B,C,sBC9Cc,SAASgB,IACtB,OAAOC,MAAM,4FAA4FC,MAAK,SAAAC,GAC5G,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,QAChB,GACF,CAEM,SAASf,EAAkBgB,GAC7B,OAAOP,MAAM,4FAAD,OAA6FO,IAAeN,MAAK,SAAAC,GAC9H,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,QAChB,GACF,CAEM,SAASE,EAAkBC,GAC7B,OAAOT,MAAM,sCAAD,OAAuCS,EAAvC,6DAA0GR,MAAK,SAAAC,GAC5H,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,QAChB,GACF,CAEM,SAASI,EAAeD,GAC1B,OAAOT,MAAM,sCAAD,OAAuCS,EAAvC,qEAAkHR,MAAK,SAAAC,GACpI,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,QAChB,GACF,CAEM,SAASK,EAAkBF,GAC7B,OAAOT,MAAM,sCAAD,OAAuCS,EAAvC,qEAAkHR,MAAK,SAAAC,GACpI,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,QAChB,GACF,C","sources":["components/pages/MovieList/MovieList.jsx","components/pages/SearchForm/SearchForm.jsx","components/pages/Movies/movies.jsx","services/api.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({items}) => {\n    const location = useLocation();\n\n    const elements = items.map(({ id, title }) =>\n        <ListItems key={id}>\n                <ListLinks state={{from: location}} to={`/movies/${id}`}>{title}</ListLinks>\n        </ListItems>);\n\n    return <ul>{elements}</ul>\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n     items: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number,\n          title: PropTypes.string,\n        })).isRequired,\n}\n\nconst ListItems = styled.li`\n    margin-left: 30px;\n`;\nconst ListLinks = styled(Link)`\ntext-decoration: none;\n    font-size: 20px;\n    color: black;\n    cursor: pointer;\n    :hover {\n        color: #ff8397;\n        text-decoration: underline; \n    }\n`;","import { React } from \"react\";\nimport { useState } from \"react\";\nimport Notiflix from 'notiflix';\nimport styled from \"styled-components\";\n\n\nconst SearchForm = ({onSubmit}) => {\n  const [text, setText] = useState(\"\");\n  \n\n  const textInput = (e) => {\n    const { value } = e.target;\n    setText(value);\n  }\n\n\n  const textSubmit = event => {\n    event.preventDefault();\n   if (text.trim() === \"\") {\n      Notiflix.Notify.warning('Fill the line');\n      return;\n    }\n    onSubmit(text);\n    setText('');\n  };\n\n\n  return (\n  <Form onSubmit ={textSubmit}>\n    <FormInput\n      type=\"text\"\n      value={text}\n      onChange={textInput}\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movies\"\n    />\n    <FormButton type=\"submit\">Search</FormButton>          \n  </Form>\n        )\n    }\n\nexport default SearchForm;\n\nconst Form = styled.form`\n  margin-left: 30px;\n  margin-bottom: 22px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst FormInput = styled.input`\n  width: 25%;\n  margin-right: 10px;\n  border-radius: 2px;\n`;\n\nconst FormButton = styled.button`\n  border: none;\n  border-radius: 5px;\n  background-color:  #ff8397;\n  font-size: 18px;\n  cursor: pointer;\n  :hover{\n    background-color: #51bbe1;\n  }\n`","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from \"services/api\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport MovieList from \"../MovieList/MovieList\";\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);  \n    const [searchParams, setSearchParams] = useSearchParams();\n    \n  const text = searchParams.get('search') ?? '';\n  \n     const changeSearch = text => {\n        setSearchParams({search: text});\n    };\n    \n\nuseEffect(() => {\n    const fetchData = async () => {\n        try {\n        const result = await fetchSearchMovies(text);\n        setMovies(result.results);\n       if (result.results.length === 0) {\n       Notiflix.Notify.failure('No matches found');\n           return;\n  }\n        }\n        catch(error) {\n            console.log('error')\n      }\n  }\n  if (text) {\n     fetchData();\n  }\n \n}, [text])\n    \n\n    return (\n        <>\n            <SearchForm onSubmit={changeSearch}/>\n            <MovieList items={movies}/>\n        </>\n    );  \n}\nexport default Movies;","export default function fetchPopularMovies() {\n  return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=2c2119be3c72764fac5749d606e2540e`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  });\n};\n\nexport function fetchSearchMovies(searchQuery) {\n     return fetch(`https://api.themoviedb.org/3/search/movie?api_key=2c2119be3c72764fac5749d606e2540e&query=${searchQuery}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  });\n};\n\nexport function fetchMovieDetails(movieId) {\n     return fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=2c2119be3c72764fac5749d606e2540e&language=en-US`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  });\n};\n\nexport function fetchMovieCast(movieId) {\n     return fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=2c2119be3c72764fac5749d606e2540e&language=en-US`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  });\n};\n\nexport function fetchMovieReviews(movieId) {\n     return fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=2c2119be3c72764fac5749d606e2540e&language=en-US`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject();\n  });\n};"],"names":["items","location","useLocation","elements","map","id","title","ListItems","ListLinks","state","from","to","styled","Link","onSubmit","useState","text","setText","Form","event","preventDefault","trim","Notiflix","FormInput","type","value","onChange","e","target","autoComplete","autoFocus","placeholder","FormButton","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchData","fetchSearchMovies","result","results","length","console","log","search","MovieList","fetchPopularMovies","fetch","then","response","ok","json","Promise","reject","searchQuery","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}